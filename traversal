#include <bits/stdc++.h>
using namespace std;
struct Node {
char key;
vector<Node*> child;
};
Node* newNode(int key)
{
	Node* temp = new Node;
	temp->key = key;
	return temp;
}
void traverse_tree(struct Node* root)
{
	stack<Node*> nodes;
	nodes.push(root);
	while (!nodes.empty()) {
		Node* curr = nodes.top();
		nodes.pop();
	if(curr != NULL)
	{
		cout << curr->key << " ";
		vector<Node*>::iterator it = curr->child.end();

		while (it != curr->child.begin()) {
			it--;
			nodes.push(*it);
		}
	}
	}
}
int main()
{

	Node* root = newNode('0');
	(root->child).push_back(newNode('1'));
	(root->child).push_back(newNode('2'));
	(root->child).push_back(newNode('3'));
	(root->child).push_back(newNode('4'));
	(root->child[0]->child).push_back(newNode('5'));
	(root->child[0]->child).push_back(newNode('7'));

    traverse_tree(root);
	return 0;
	}
